version: '3.3'

services:
  web:
    restart: always
    build:
      context: ./app
    command: /src/venv/bin/python manage.py runserver 0.0.0.0:8000
    entrypoint: '/home/app/web/entrypoint.sh'
    volumes:
      - ./app:/home/app/web
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db

  redis:
    image: redis
    restart: always
    container_name: 'redis'
    command: redis-server
    working_dir: /data
    volumes:
      - redisdata:/data
      - /etc/localtime:/etc/localtime
    expose:
      - 6379
  celery:
    build:
      context: ./app
    container_name: 'celery'
    command: /src/venv/bin/celery -A app worker -B
    env_file:
      - ./.env
    volumes:
      - .:/code
    links:
      - redis
    depends_on:
      - web
      - redis
  flower:
    image: mher/flower
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_API=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - celery
  daphne:
    build:
      context: ./app
    command: /src/venv/bin/daphne -b 0.0.0.0 -p 8001 app.asgi:application
    ports:
      - "8001:8001"
    volumes:
      - ./app:/home/app/web
    env_file:
      - ./.env
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
      - web
    links:
      - redis

volumes:
  postgres_data:
  redisdata:
    driver: local
